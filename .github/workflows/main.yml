name: Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    env:
      DB_HOST: ${{ secrets.SERVER_HOST }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DEBUG: ${{ secrets.DEBUG }}
      DB_PORT: ${{ secrets.DB_PORT }}
      DB_NAME: ${{ secrets.DB_NAME }}
      TEST_DB: ${{ secrets.TEST_DB }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      FLASK_DEBUG: ${{ secrets.FLASK_DEBUG }}
      REDIS_HOST: ${{ secrets.SERVER_HOST }}
      REDIS_PORT: ${{ secrets.REDIS_PORT }}
      REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
      SERVER_HOST: ${{ secrets.SERVER_HOST }}
      SERVER_USERNAME: ${{ secrets.SERVER_USERNAME }}
      SERVER_KEY: ${{ secrets.SERVER_KEY }}


    steps:
      - name: Connect to server using SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${ SERVER_HOST }
          username: ${ SERVER_USERNAME }
          key: ${ SERVER_KEY }
          script: |
            sudo chmod 777 /var/run/docker.sock
            cd /home/aqzaqz/coba/flask_rest_boilerplate
            git pull origin main
            docker stop flask_bo_container
            docker rm  flask_bo_container
            docker rmi flask_bo_images:latest
            docker build -t flask_bo_images:latest .
            docker run -d \
            -p 5050:5050 \
            -e DB_HOST=${ SERVER_HOST } \
            -e DB_USER=${ DB_USER } \
            -e DB_PASSWORD=${ DB_PASSWORD } \
            -e DEBUG=${ DEBUG } \
            -e DB_PORT=${ DB_PORT } \
            -e DB_NAME=${ DB_NAME } \
            -e TEST_DB=${ TEST_DB } \
            -e SECRET_KEY=${ SECRET_KEY } \
            -e FLASK_DEBUG=${ FLASK_DEBUG } \
            -e REDIS_HOST=${ SERVER_HOST } \
            -e REDIS_PORT=${ REDIS_PORT }\
            -e REDIS_PASSWORD= ${ REDIS_PASSWORD } \
            --name flask_bo_container \
            flask_bo_images
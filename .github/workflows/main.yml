name: Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      TEST_DB_USER: ${{ secrets.TEST_DB_USER }}
      TEST_DB_PASSWORD: ${{ secrets.TEST_DB_PASSWORD }}
      DB_PORT: ${{ secrets.DB_PORT }}
      DB_NAME: ${{ secrets.DB_NAME }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DEBUG: ${{ secrets.DEBUG }}

      REDIS_HOST: ${{ secrets.REDIS_HOST }}
      REDIS_PORT: ${{ secrets.REDIS_PORT }}
      REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
    steps:
      - name: Connect to server using SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_KEY }}
          script: |
            sudo chmod 777 /var/run/docker.sock
            cd /home/aqzaqz/coba/flask_rest_boilerplate
            git pull origin main
            docker stop flask_bo_container
            docker rm  flask_bo_container
            docker rmi flask_bo_images:latest
            docker build -t flask_bo_images:latest .
            docker run -d -p 5000:5000 \
            -e DB_HOST=$DB_HOST \
            -e DB_USER=$DB_USER \
            -e DB_PASSWORD=$DB_PASSWORD \
            -e TEST_DB_USER=$TEST_DB_USER \
            -e TEST_DB_PASSWORD=$TEST_DB_PASSWORD \
            -e DB_PORT=$DB_PORT \
            -e DB_NAME=$DB_NAME \
            -e SECRET_KEY=$SECRET_KEY \
            -e DEBUG=$DEBUG \
            -e REDIS_HOST=$REDIS_HOST \
            -e REDIS_PORT=$REDIS_PORT \
            -e REDIS_PASSWORD=$REDIS_PASSWORD \
            --name flask_bo_container flask_bo_images:latest

